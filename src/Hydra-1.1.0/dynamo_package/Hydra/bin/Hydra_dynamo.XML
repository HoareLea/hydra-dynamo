<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hydra_dynamo</name>
    </assembly>
    <members>
        <member name="T:Hydra.HydraShare">
            <summary>
                Hydra Share node implementation.
            </summary>
        </member>
        <member name="F:Hydra.HydraShare.RequestSave">
            <summary>
                Request save action.
            </summary>
        </member>
        <member name="P:Hydra.HydraShare.Message">
            <summary>
                A message that will appear on the button
            </summary>
        </member>
        <member name="P:Hydra.HydraShare.MessageCommand">
            <summary>
                DelegateCommand objects allow you to bind
            UI interaction to methods on your data context.
            </summary>
        </member>
        <member name="M:Hydra.HydraShare.#ctor">
            <summary>
                The constructor for a NodeModel is used to create
                the input and output ports and specify the argument
                lacing.
            </summary>
        </member>
        <member name="T:Hydra.HydraShare.CustomNodeModelNodeViewCustomization">
            <summary>
                View customizer for CustomNodeModel Node Model.
            </summary>
        </member>
        <member name="M:Hydra.HydraShare.CustomNodeModelNodeViewCustomization.CustomizeView(Hydra.HydraShare,Dynamo.Controls.NodeView)">
            <summary>
                At run-time, this method is called during the node 
                creation. Here you can create custom UI elements and
                add them to the node view, but we recommend designing
                your UI declaratively using xaml, and binding it to
                properties on this node as the DataContext.
            </summary>
            <param name="model">The NodeModel representing the node's core logic.</param>
            <param name="nodeView">The NodeView representing the node in the graph.</param>
        </member>
        <member name="M:Hydra.HydraShare.CustomNodeModelNodeViewCustomization.exportToHydra(Dynamo.Graph.Nodes.NodeModel,Dynamo.Controls.NodeView)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <param name="nodeView"></param>
        </member>
        <member name="M:Hydra.HydraShare.CustomNodeModelNodeViewCustomization.Dispose">
            <summary>
                Here you can do any cleanup you require if you've assigned callbacks for particular 
                UI events on your node.
            </summary>
        </member>
        <member name="T:Hydra.HydraShareControl">
            <summary>
            HydraShareControl
            </summary>
        </member>
        <member name="M:Hydra.HydraShareControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Hydra.HydraShareControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
